name: Test and Publish Python Package

on:
  push:
    branches:
      - master # Only run on pushes to the master branch

jobs:
  test-and-publish:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3.8-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        env:
          RABBITMQ_HOST: localhost # Set RabbitMQ connection environment variables
          RABBITMQ_PORT: 5672
        run: |
          pytest tests/

      - name: Publish to PyPI
        if: success()
        run: |
          python -m pip install --upgrade build
          python -m build
          python -m pip install --upgrade twine
          python -m twine upload --non-interactive --repository pypi dist/*
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
# name: Publish Python Package

# on:
#   push:
#     branches:
#       - master  # Only run on pushes to the master branch

# jobs:
#   test-and-publish:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.x'

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r requirements.txt
#         pip install pytest

#     - name: Run tests
#       run: |
#         pytest tests/

#     - name: Publish to PyPI
#       if: success()
#       run: |
#         python -m pip install --upgrade build
#         python -m build
#         python -m pip install --upgrade twine
#         python -m twine upload --non-interactive --repository pypi dist/*
#       env:
#         TWINE_USERNAME: "__token__"
#         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
